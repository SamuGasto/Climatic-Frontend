{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Graphic/editable-text.tsx"],"sourcesContent":["import { Button } from \"@nextui-org/button\";\r\nimport { Input } from \"@nextui-org/input\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface PropType {\r\n  defaultText: string;\r\n  textClassName?: string;\r\n}\r\n\r\nfunction EditabelText(props: PropType) {\r\n  const { defaultText, textClassName } = props;\r\n\r\n  const [text, setText] = useState(defaultText);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <div className=\"flex justify-center align-middle w-full\">\r\n      {!editMode ? (\r\n        <Button\r\n          className=\"w-auto\"\r\n          variant=\"light\"\r\n          onClick={() => setEditMode(true)}\r\n        >\r\n          <h1 className={textClassName}>{text}</h1>\r\n        </Button>\r\n      ) : (\r\n        <Input\r\n          className=\"w-auto\"\r\n          defaultValue={text}\r\n          onValueChange={(value) => setText(value)}\r\n          onKeyDown={(key) => {\r\n            if (key.key == \"Enter\") {\r\n              setEditMode(false);\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditabelText;\r\n"],"names":[],"mappings":";;;;;;;;;;;;AASA,SAAS,aAAa,KAAe;IACnC,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,GAAG;IAEvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,qBACE,wPAAC;QAAI,WAAU;kBACZ,CAAC,yBACA,wPAAC,mNAAA,CAAA,SAAM;YACL,WAAU;YACV,SAAQ;YACR,SAAS,IAAM,YAAY;sBAE3B,cAAA,wPAAC;gBAAG,WAAW;0BAAgB;;;;;;;;;;iCAGjC,wPAAC,gNAAA,CAAA,QAAK;YACJ,WAAU;YACV,cAAc;YACd,eAAe,CAAC,QAAU,QAAQ;YAClC,WAAW,CAAC;gBACV,IAAI,IAAI,GAAG,IAAI,SAAS;oBACtB,YAAY;gBACd;YACF;;;;;;;;;;;AAKV;uCAEe"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Graphic/titulo.tsx"],"sourcesContent":["import React from \"react\";\r\nimport EditabelText from \"./editable-text\";\r\n\r\ninterface PropType {\r\n  original_tittle: string;\r\n  original_subtittle: string;\r\n}\r\n\r\nexport default function Titulo(props: PropType) {\r\n  const { original_tittle, original_subtittle } = props;\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full justify-center align-middle text-center gap-4\">\r\n      <EditabelText\r\n        defaultText={original_tittle}\r\n        textClassName=\"text-4xl font-semibold\"\r\n      />\r\n      <EditabelText defaultText={original_subtittle} textClassName=\"text-lg\" />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAQe,SAAS,OAAO,KAAe;IAC5C,MAAM,EAAE,eAAe,EAAE,kBAAkB,EAAE,GAAG;IAEhD,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC,0IAAA,CAAA,UAAY;gBACX,aAAa;gBACb,eAAc;;;;;;0BAEhB,wPAAC,0IAAA,CAAA,UAAY;gBAAC,aAAa;gBAAoB,eAAc;;;;;;;;;;;;AAGnE"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Graphic/ventana-grafico.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function VentanaGrafico(props: any) {\r\n  const [Chart, setChart] = useState<any>();\r\n  const hasType = typeof props?.type !== \"undefined\";\r\n\r\n  useEffect(() => {\r\n    import(\"react-apexcharts\").then((mod) => {\r\n      setChart(() => mod.default);\r\n    });\r\n  }, []);\r\n\r\n  return hasType && Chart && <Chart {...props} />;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAEe,SAAS,eAAe,KAAU;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,UAAU,OAAO,OAAO,SAAS;IAEvC,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,yJAA2B,IAAI,CAAC,CAAC;YAC/B,SAAS,IAAM,IAAI,OAAO;QAC5B;IACF,GAAG,EAAE;IAEL,OAAO,WAAW,uBAAS,wPAAC;QAAO,GAAG,KAAK;;;;;;AAC7C"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/utils/Stores/chartStore.ts"],"sourcesContent":["import { Chart } from \"@/types/chart\";\r\nimport { create } from \"zustand\";\r\n\r\ninterface ChartStore {\r\n  chartSelected: Chart;\r\n  typeChart:\r\n    | \"image\"\r\n    | \"line\"\r\n    | \"area\"\r\n    | \"bar\"\r\n    | \"pie\"\r\n    | \"donut\"\r\n    | \"radialBar\"\r\n    | \"scatter\"\r\n    | \"bubble\"\r\n    | \"heatmap\"\r\n    | \"candlestick\"\r\n    | \"boxPlot\"\r\n    | \"radar\"\r\n    | \"polarArea\"\r\n    | \"rangeBar\"\r\n    | \"rangeArea\"\r\n    | \"treemap\";\r\n  loadChartData: () => void;\r\n  selectChart: (newChart: Chart) => void;\r\n  changeTypeChart: (\r\n    newType:\r\n      | \"image\"\r\n      | \"line\"\r\n      | \"area\"\r\n      | \"bar\"\r\n      | \"pie\"\r\n      | \"donut\"\r\n      | \"radialBar\"\r\n      | \"scatter\"\r\n      | \"bubble\"\r\n      | \"heatmap\"\r\n      | \"candlestick\"\r\n      | \"boxPlot\"\r\n      | \"radar\"\r\n      | \"polarArea\"\r\n      | \"rangeBar\"\r\n      | \"rangeArea\"\r\n      | \"treemap\"\r\n  ) => void;\r\n}\r\n\r\nexport const useChartStore = create<ChartStore>((set, get) => ({\r\n  chartSelected: {\r\n    id: 0,\r\n    title: \"\",\r\n    subtitle: \"\",\r\n    active: false,\r\n    backendData: {\r\n      latitude: [],\r\n      longitude: [],\r\n      image: \"\",\r\n      data: [],\r\n      time: [],\r\n      level: [],\r\n      units: \"\",\r\n    },\r\n    typeChart: \"bar\",\r\n  },\r\n  typeChart: \"image\",\r\n  loadChartData: () => {\r\n    try {\r\n      const data = localStorage.getItem(\"UserData.chartSelected\");\r\n      if (data) {\r\n        set((state) => ({ ...state, chartSelected: JSON.parse(data) }));\r\n      } else {\r\n        const provisionalChart: Chart = {\r\n          id: 0,\r\n          title: \"\",\r\n          subtitle: \"\",\r\n          active: false,\r\n          backendData: {\r\n            latitude: [],\r\n            longitude: [],\r\n            image: \"\",\r\n            data: [],\r\n            time: [],\r\n            level: [],\r\n            units: \"\",\r\n          },\r\n          typeChart: \"bar\",\r\n        };\r\n        set((state) => ({ ...state, chartSelected: provisionalChart }));\r\n        localStorage.setItem(\r\n          \"UserData.chartSelected\",\r\n          JSON.stringify(provisionalChart)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  },\r\n  selectChart: (newChart: Chart) => {\r\n    set((state) => ({ ...state, chartSelected: newChart }));\r\n    localStorage.setItem(\"UserData.chartSelected\", JSON.stringify(newChart));\r\n  },\r\n  changeTypeChart: (newType) => {\r\n    set((state) => ({ ...state, typeChart: newType }));\r\n  },\r\n}));\r\n"],"names":[],"mappings":";;;;;;AA+CO,MAAM,gBAAgB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAc,CAAC,KAAK,MAAQ,CAAC;QAC7D,eAAe;YACb,IAAI;YACJ,OAAO;YACP,UAAU;YACV,QAAQ;YACR,aAAa;gBACX,UAAU,EAAE;gBACZ,WAAW,EAAE;gBACb,OAAO;gBACP,MAAM,EAAE;gBACR,MAAM,EAAE;gBACR,OAAO,EAAE;gBACT,OAAO;YACT;YACA,WAAW;QACb;QACA,WAAW;QACX,eAAe;YACb,IAAI;gBACF,MAAM,OAAO,aAAa,OAAO,CAAC;gBAClC,IAAI,MAAM;oBACR,IAAI,CAAC,QAAU,CAAC;4BAAE,GAAG,KAAK;4BAAE,eAAe,KAAK,KAAK,CAAC;wBAAM,CAAC;gBAC/D,OAAO;oBACL,MAAM,mBAA0B;wBAC9B,IAAI;wBACJ,OAAO;wBACP,UAAU;wBACV,QAAQ;wBACR,aAAa;4BACX,UAAU,EAAE;4BACZ,WAAW,EAAE;4BACb,OAAO;4BACP,MAAM,EAAE;4BACR,MAAM,EAAE;4BACR,OAAO,EAAE;4BACT,OAAO;wBACT;wBACA,WAAW;oBACb;oBACA,IAAI,CAAC,QAAU,CAAC;4BAAE,GAAG,KAAK;4BAAE,eAAe;wBAAiB,CAAC;oBAC7D,aAAa,OAAO,CAClB,0BACA,KAAK,SAAS,CAAC;gBAEnB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;YAChB;QACF;QACA,aAAa,CAAC;YACZ,IAAI,CAAC,QAAU,CAAC;oBAAE,GAAG,KAAK;oBAAE,eAAe;gBAAS,CAAC;YACrD,aAAa,OAAO,CAAC,0BAA0B,KAAK,SAAS,CAAC;QAChE;QACA,iBAAiB,CAAC;YAChB,IAAI,CAAC,QAAU,CAAC;oBAAE,GAAG,KAAK;oBAAE,WAAW;gBAAQ,CAAC;QAClD;IACF,CAAC"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/types/chart.ts"],"sourcesContent":["import { ApexOptions } from \"apexcharts\";\r\nimport BackendData from \"./backend-data\";\r\n\r\nexport interface Series {\r\n  name: string;\r\n  data: { x: string; y: number }[];\r\n}\r\n\r\nexport interface ChartConfig {\r\n  series: Series[];\r\n  options: ApexOptions;\r\n}\r\n\r\nexport interface Chart {\r\n  id: number;\r\n  title: string;\r\n  subtitle: string;\r\n  active: boolean;\r\n  backendData: BackendData;\r\n  typeChart:\r\n    | \"image\"\r\n    | \"line\"\r\n    | \"area\"\r\n    | \"bar\"\r\n    | \"pie\"\r\n    | \"donut\"\r\n    | \"radialBar\"\r\n    | \"scatter\"\r\n    | \"bubble\"\r\n    | \"heatmap\"\r\n    | \"candlestick\"\r\n    | \"boxPlot\"\r\n    | \"radar\"\r\n    | \"polarArea\"\r\n    | \"rangeBar\"\r\n    | \"rangeArea\"\r\n    | \"treemap\";\r\n}\r\n\r\ninterface Props {\r\n  data: Series[];\r\n  theme: \"dark\" | \"light\";\r\n  typeChart:\r\n    | \"line\"\r\n    | \"area\"\r\n    | \"bar\"\r\n    | \"pie\"\r\n    | \"donut\"\r\n    | \"radialBar\"\r\n    | \"scatter\"\r\n    | \"bubble\"\r\n    | \"heatmap\"\r\n    | \"candlestick\"\r\n    | \"boxPlot\"\r\n    | \"radar\"\r\n    | \"polarArea\"\r\n    | \"rangeBar\"\r\n    | \"rangeArea\"\r\n    | \"treemap\";\r\n  categories: string[];\r\n  colors: any[] | undefined;\r\n}\r\n\r\nexport function ChartConfigInteractive(props: Props): ChartConfig {\r\n  const { data, theme, typeChart, categories, colors } = props;\r\n\r\n  return {\r\n    series: data,\r\n    options: {\r\n      chart: {\r\n        height: \"98%\",\r\n        width: \"98%\",\r\n        type: typeChart,\r\n        zoom: {\r\n          enabled: true,\r\n          type: \"xy\",\r\n        },\r\n      },\r\n      plotOptions: {\r\n        heatmap: {\r\n          radius: 6,\r\n        },\r\n      },\r\n      colors: colors,\r\n      xaxis: {\r\n        type: \"category\",\r\n        categories: categories,\r\n        title: {\r\n          text: \"Longitud\",\r\n        },\r\n        decimalsInFloat: 1,\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Latitud\",\r\n        },\r\n        decimalsInFloat: 1,\r\n      },\r\n\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      noData: {\r\n        text: \"Cargando...\",\r\n      },\r\n      theme: {\r\n        mode: theme,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport function ChartConfigNoInteractive(props: Props): ChartConfig {\r\n  const { data, typeChart, categories, colors } = props;\r\n  return {\r\n    series: data,\r\n    options: {\r\n      chart: {\r\n        height: \"98%\",\r\n        width: \"98%\",\r\n        type: typeChart,\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n        toolbar: { show: false },\r\n        animations: { enabled: false },\r\n      },\r\n\r\n      colors: colors,\r\n      xaxis: {\r\n        type: \"category\",\r\n        categories: categories,\r\n        title: {\r\n          text: \"Longitud\",\r\n        },\r\n        decimalsInFloat: 1,\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Latitud\",\r\n        },\r\n        decimalsInFloat: 1,\r\n      },\r\n      tooltip: { enabled: false },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: { show: false },\r\n      noData: {\r\n        text: \"Cargando...\",\r\n      },\r\n    },\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;AA+DO,SAAS,uBAAuB,KAAY;IACjD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG;IAEvD,OAAO;QACL,QAAQ;QACR,SAAS;YACP,OAAO;gBACL,QAAQ;gBACR,OAAO;gBACP,MAAM;gBACN,MAAM;oBACJ,SAAS;oBACT,MAAM;gBACR;YACF;YACA,aAAa;gBACX,SAAS;oBACP,QAAQ;gBACV;YACF;YACA,QAAQ;YACR,OAAO;gBACL,MAAM;gBACN,YAAY;gBACZ,OAAO;oBACL,MAAM;gBACR;gBACA,iBAAiB;YACnB;YACA,OAAO;gBACL,OAAO;oBACL,MAAM;gBACR;gBACA,iBAAiB;YACnB;YAEA,YAAY;gBACV,SAAS;YACX;YACA,QAAQ;gBACN,MAAM;YACR;YACA,OAAO;gBACL,MAAM;YACR;QACF;IACF;AACF;AAEO,SAAS,yBAAyB,KAAY;IACnD,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG;IAChD,OAAO;QACL,QAAQ;QACR,SAAS;YACP,OAAO;gBACL,QAAQ;gBACR,OAAO;gBACP,MAAM;gBACN,MAAM;oBACJ,SAAS;gBACX;gBACA,SAAS;oBAAE,MAAM;gBAAM;gBACvB,YAAY;oBAAE,SAAS;gBAAM;YAC/B;YAEA,QAAQ;YACR,OAAO;gBACL,MAAM;gBACN,YAAY;gBACZ,OAAO;oBACL,MAAM;gBACR;gBACA,iBAAiB;YACnB;YACA,OAAO;gBACL,OAAO;oBACL,MAAM;gBACR;gBACA,iBAAiB;YACnB;YACA,SAAS;gBAAE,SAAS;YAAM;YAC1B,YAAY;gBACV,SAAS;YACX;YACA,QAAQ;gBAAE,MAAM;YAAM;YACtB,QAAQ;gBACN,MAAM;YACR;QACF;IACF;AACF"}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/utils/TransformToSeries.tsx"],"sourcesContent":["import BackendData from \"@/types/backend-data\";\r\n\r\nexport function TransformToSeries(data: BackendData) {\r\n  const firstData = [...data.data];\r\n  const finalData = firstData.map((latitud, index) => {\r\n    return {\r\n      name: data.latitude[index].toString(),\r\n      data: latitud.map((element, i) => {\r\n        return {\r\n          x: data.longitude[i].toString(),\r\n          y: element,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n\r\n  return finalData;\r\n}\r\n"],"names":[],"mappings":";;;AAEO,SAAS,kBAAkB,IAAiB;IACjD,MAAM,YAAY;WAAI,KAAK,IAAI;KAAC;IAChC,MAAM,YAAY,UAAU,GAAG,CAAC,CAAC,SAAS;QACxC,OAAO;YACL,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ;YACnC,MAAM,QAAQ,GAAG,CAAC,CAAC,SAAS;gBAC1B,OAAO;oBACL,GAAG,KAAK,SAAS,CAAC,EAAE,CAAC,QAAQ;oBAC7B,GAAG;gBACL;YACF;QACF;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/utils/GenerateChart.tsx"],"sourcesContent":["import {\r\n  ChartConfig,\r\n  ChartConfigInteractive,\r\n  ChartConfigNoInteractive,\r\n} from \"@/types/chart\";\r\nimport BackendData from \"@/types/backend-data\";\r\nimport { UseThemeProps } from \"next-themes/dist/types\";\r\nimport { TransformToSeries } from \"./TransformToSeries\";\r\n\r\ninterface ChartOptions {\r\n  color?: any[];\r\n  isNormalized?: boolean;\r\n  theme?: UseThemeProps;\r\n}\r\n\r\ninterface FinalCharts {\r\n  Interactive: ChartConfig;\r\n  NoInteractive: ChartConfig;\r\n}\r\n\r\nexport function CreateEmptyApexChart() {\r\n  const emptyData: BackendData = {\r\n    latitude: [],\r\n    longitude: [],\r\n    image: \"\",\r\n    data: [],\r\n    time: \"\",\r\n    units: \"\",\r\n  };\r\n  const { Interactive, NoInteractive } = GenerateApexChart(emptyData, \"bar\");\r\n  return { Interactive, NoInteractive };\r\n}\r\n\r\nfunction GenerateApexChart(\r\n  data: BackendData,\r\n  typeChart:\r\n    | \"line\"\r\n    | \"area\"\r\n    | \"bar\"\r\n    | \"pie\"\r\n    | \"donut\"\r\n    | \"radialBar\"\r\n    | \"scatter\"\r\n    | \"bubble\"\r\n    | \"heatmap\"\r\n    | \"candlestick\"\r\n    | \"boxPlot\"\r\n    | \"radar\"\r\n    | \"polarArea\"\r\n    | \"rangeBar\"\r\n    | \"rangeArea\"\r\n    | \"treemap\",\r\n  options?: ChartOptions\r\n): FinalCharts {\r\n  const seriesData = TransformToSeries(data);\r\n\r\n  const labels = data.longitude.map((l) => {\r\n    return l.toString();\r\n  });\r\n\r\n  const InteractiveChart = ChartConfigInteractive({\r\n    data: seriesData,\r\n    theme: options?.theme?.theme === \"light\" ? \"light\" : \"dark\",\r\n    typeChart: typeChart,\r\n    categories: labels,\r\n    colors: options?.color ? options?.color : [\"#858585\"],\r\n  });\r\n  const NoInteractiveChart = ChartConfigNoInteractive({\r\n    data: seriesData,\r\n    theme: options?.theme?.theme === \"light\" ? \"light\" : \"dark\",\r\n    typeChart: typeChart,\r\n    categories: labels,\r\n    colors: options?.color ? options?.color : [\"#858585\"],\r\n  });\r\n  return { Interactive: InteractiveChart, NoInteractive: NoInteractiveChart };\r\n}\r\n\r\nexport default GenerateApexChart;\r\n"],"names":[],"mappings":";;;;;;;;;AAoBO,SAAS;IACd,MAAM,YAAyB;QAC7B,UAAU,EAAE;QACZ,WAAW,EAAE;QACb,OAAO;QACP,MAAM,EAAE;QACR,MAAM;QACN,OAAO;IACT;IACA,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,GAAG,kBAAkB,WAAW;IACpE,OAAO;QAAE;QAAa;IAAc;AACtC;AAEA,SAAS,kBACP,IAAiB,EACjB,SAgBa,EACb,OAAsB;IAEtB,MAAM,aAAa,CAAA,GAAA,2HAAA,CAAA,oBAAiB,AAAD,EAAE;IAErC,MAAM,SAAS,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC;QACjC,OAAO,EAAE,QAAQ;IACnB;IAEA,MAAM,mBAAmB,CAAA,GAAA,8GAAA,CAAA,yBAAsB,AAAD,EAAE;QAC9C,MAAM;QACN,OAAO,SAAS,OAAO,UAAU,UAAU,UAAU;QACrD,WAAW;QACX,YAAY;QACZ,QAAQ,SAAS,QAAQ,SAAS,QAAQ;YAAC;SAAU;IACvD;IACA,MAAM,qBAAqB,CAAA,GAAA,8GAAA,CAAA,2BAAwB,AAAD,EAAE;QAClD,MAAM;QACN,OAAO,SAAS,OAAO,UAAU,UAAU,UAAU;QACrD,WAAW;QACX,YAAY;QACZ,QAAQ,SAAS,QAAQ,SAAS,QAAQ;YAAC;SAAU;IACvD;IACA,OAAO;QAAE,aAAa;QAAkB,eAAe;IAAmB;AAC5E;uCAEe"}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Graphic/grafico-apex-chart.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody } from \"@nextui-org/card\";\r\nimport VentanaGrafico from \"./ventana-grafico\";\r\nimport { useTheme } from \"next-themes\";\r\nimport { useChartStore } from \"@/utils/Stores/chartStore\";\r\nimport GenerateApexChart from \"@/utils/GenerateChart\";\r\n\r\nexport default function GraficoApex() {\r\n  const { chartSelected, typeChart } = useChartStore.getState();\r\n  const actualTheme = useTheme();\r\n  const color = [\"#ffcd6d\"];\r\n\r\n  const { Interactive } = GenerateApexChart(\r\n    chartSelected.backendData,\r\n    typeChart === \"image\" ? \"bar\" : typeChart,\r\n    {\r\n      color: color,\r\n      theme: actualTheme,\r\n    }\r\n  );\r\n\r\n  //Renderizar el gráfico\r\n  return (\r\n    <div className=\"flex w-full h-full justify-center\">\r\n      <Card className=\"flex w-full h-full z-10 bg-transparent\" shadow=\"none\">\r\n        <CardBody>\r\n          <VentanaGrafico\r\n            className=\"p-2 \"\r\n            options={Interactive.options}\r\n            series={Interactive.series}\r\n            type={Interactive.options.chart?.type}\r\n            width={\"98%\"}\r\n            height={\"98%\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,6HAAA,CAAA,gBAAa,CAAC,QAAQ;IAC3D,MAAM,cAAc,CAAA,GAAA,yJAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,QAAQ;QAAC;KAAU;IAEzB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAiB,AAAD,EACtC,cAAc,WAAW,EACzB,cAAc,UAAU,QAAQ,WAChC;QACE,OAAO;QACP,OAAO;IACT;IAGF,uBAAuB;IACvB,qBACE,wPAAC;QAAI,WAAU;kBACb,cAAA,wPAAC,6MAAA,CAAA,OAAI;YAAC,WAAU;YAAyC,QAAO;sBAC9D,cAAA,wPAAC,sNAAA,CAAA,WAAQ;0BACP,cAAA,wPAAC,4IAAA,CAAA,UAAc;oBACb,WAAU;oBACV,SAAS,YAAY,OAAO;oBAC5B,QAAQ,YAAY,MAAM;oBAC1B,MAAM,YAAY,OAAO,CAAC,KAAK,EAAE;oBACjC,OAAO;oBACP,QAAQ;;;;;;;;;;;;;;;;;;;;;AAMpB"}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Graphic/grafico-imagen.tsx"],"sourcesContent":["import { exampleData } from \"@/config/test-data\";\r\nimport { useChartStore } from \"@/utils/Stores/chartStore\";\r\nimport { Image } from \"@nextui-org/image\";\r\nimport { CircularProgress } from \"@nextui-org/progress\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction GraficoImagen() {\r\n  const { chartSelected } = useChartStore.getState();\r\n\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchImage = () => {\r\n      try {\r\n        const response = chartSelected.backendData.image;\r\n        setImageSrc(`data:image/png;base64,${response}`);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching the image:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex w-full justify-center align-middle\">\r\n      {loading ? <CircularProgress /> : <Image src={imageSrc} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraficoImagen;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAMA,SAAS;IACP,MAAM,EAAE,aAAa,EAAE,GAAG,6HAAA,CAAA,gBAAa,CAAC,QAAQ;IAEhD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa;YACjB,IAAI;gBACF,MAAM,WAAW,cAAc,WAAW,CAAC,KAAK;gBAChD,YAAY,CAAC,sBAAsB,EAAE,SAAS,CAAC;gBAC/C,WAAW;YACb,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,wPAAC;QAAI,WAAU;kBACZ,wBAAU,wPAAC,0OAAA,CAAA,mBAAgB;;;;iCAAM,wPAAC,gNAAA,CAAA,QAAK;YAAC,KAAK;;;;;;;;;;;AAGpD;uCAEe"}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Graphic/general.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Titulo from \"./titulo\";\r\nimport BackendData from \"@/types/backend-data\";\r\nimport { Checkbox } from \"@nextui-org/react\";\r\nimport GraficoApex from \"./grafico-apex-chart\";\r\nimport GraficoImagen from \"./grafico-imagen\";\r\nimport { useChartStore } from \"@/utils/Stores/chartStore\";\r\nimport { BarChartOff } from \"../icons\";\r\n\r\nexport default function Visualizador() {\r\n  const { chartSelected } = useChartStore.getState();\r\n  const [refresh, SetRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    SetRefresh(!refresh);\r\n  }, [chartSelected]);\r\n\r\n  return (\r\n    <div className=\"flex w-full\">\r\n      {chartSelected.active ? (\r\n        <div className=\"flex w-full flex-col gap-10 p-6\">\r\n          <Titulo\r\n            original_tittle=\"Título de ejemplo\"\r\n            original_subtittle=\"Subtítulo de ejemplo\"\r\n          />\r\n          <div className=\"flex w-full min-h-[360px]\">\r\n            {chartSelected.typeChart !== \"image\" ? (\r\n              <GraficoImagen />\r\n            ) : (\r\n              <GraficoApex />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex flex-col w-full h-full gap-10 items-center justify-center\">\r\n          <h1 className=\"font-semibold text-4xl text-center\">\r\n            No se ha creado ningún gráfico todavía...\r\n          </h1>\r\n          <BarChartOff width={200} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AASe,SAAS;IACtB,MAAM,EAAE,aAAa,EAAE,GAAG,6HAAA,CAAA,gBAAa,CAAC,QAAQ;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW,CAAC;IACd,GAAG;QAAC;KAAc;IAElB,qBACE,wPAAC;QAAI,WAAU;kBACZ,cAAc,MAAM,iBACnB,wPAAC;YAAI,WAAU;;8BACb,wPAAC,gIAAA,CAAA,UAAM;oBACL,iBAAgB;oBAChB,oBAAmB;;;;;;8BAErB,wPAAC;oBAAI,WAAU;8BACZ,cAAc,SAAS,KAAK,wBAC3B,wPAAC,2IAAA,CAAA,UAAa;;;;6CAEd,wPAAC,kJAAA,CAAA,UAAW;;;;;;;;;;;;;;;iCAKlB,wPAAC;YAAI,WAAU;;8BACb,wPAAC;oBAAG,WAAU;8BAAqC;;;;;;8BAGnD,wPAAC,oHAAA,CAAA,cAAW;oBAAC,OAAO;;;;;;;;;;;;;;;;;AAK9B"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Sidebar/select.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Select, SelectItem } from \"@nextui-org/react\";\r\n\r\ntype elemento = {\r\n  key: string;\r\n  label: string;\r\n};\r\n\r\ninterface DesplegableProps {\r\n  titulo?: string;\r\n  explicacion?: string;\r\n  elementos: elemento[];\r\n  onSelect?: (key: string) => void;\r\n  desabilitado?: boolean;\r\n}\r\n\r\nexport default function Desplegable(props: DesplegableProps) {\r\n  const { titulo, explicacion, elementos, onSelect, desabilitado } = props;\r\n\r\n  return (\r\n    <div className=\"flex w-full\">\r\n      <Select\r\n        size=\"md\"\r\n        label={explicacion}\r\n        placeholder={titulo}\r\n        className=\"flex w-full\"\r\n        isDisabled={desabilitado}\r\n      >\r\n        {elementos.map((elemento) => (\r\n          <SelectItem\r\n            onClick={() => onSelect?.(elemento.key)}\r\n            key={elemento.key}\r\n          >\r\n            {elemento.label}\r\n          </SelectItem>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAgBe,SAAS,YAAY,KAAuB;IACzD,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG;IAEnE,qBACE,wPAAC;QAAI,WAAU;kBACb,cAAA,wPAAC,mNAAA,CAAA,SAAM;YACL,MAAK;YACL,OAAO;YACP,aAAa;YACb,WAAU;YACV,YAAY;sBAEX,UAAU,GAAG,CAAC,CAAC,yBACd,wPAAC,mOAAA,CAAA,aAAU;oBACT,SAAS,IAAM,WAAW,SAAS,GAAG;8BAGrC,SAAS,KAAK;mBAFV,SAAS,GAAG;;;;;;;;;;;;;;;AAQ7B"}},
    {"offset": {"line": 656, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Sidebar/slider.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Slider } from \"@nextui-org/react\";\r\nimport { Consulta } from \"@/types/consulta\";\r\nexport type SliderValue = number | number[];\r\n\r\ntype Props = {\r\n  label: string;\r\n  step: number;\r\n  minimo: number;\r\n  maximo: number;\r\n  defaultValue: number[];\r\n  setConsulta: (consulta: Consulta) => void;\r\n  consultaOriginal: Consulta;\r\n  tipo: \"latitud\" | \"longitud\";\r\n};\r\n\r\nexport default function Deslizador(props: Props) {\r\n  const {\r\n    maximo,\r\n    minimo,\r\n    step,\r\n    label,\r\n    defaultValue,\r\n    setConsulta,\r\n    consultaOriginal,\r\n    tipo,\r\n  } = props;\r\n\r\n  const [sliderValue, setSliderValue] = useState<number | number[]>([\r\n    minimo,\r\n    maximo,\r\n  ]);\r\n\r\n  function configurarConsulta() {\r\n    let newConsulta = { ...consultaOriginal };\r\n\r\n    if (tipo == \"latitud\") {\r\n      if (Array.isArray(sliderValue)) {\r\n        newConsulta.latitud = sliderValue;\r\n      } else {\r\n        newConsulta.latitud = [sliderValue, sliderValue];\r\n      }\r\n    } else if (tipo == \"longitud\") {\r\n      if (Array.isArray(sliderValue)) {\r\n        newConsulta.longitud = sliderValue;\r\n      } else {\r\n        newConsulta.longitud = [sliderValue, sliderValue];\r\n      }\r\n    }\r\n\r\n    setConsulta(newConsulta);\r\n  }\r\n\r\n  return (\r\n    <Slider\r\n      label={label}\r\n      step={step}\r\n      minValue={minimo}\r\n      maxValue={maximo}\r\n      defaultValue={defaultValue}\r\n      showSteps={true}\r\n      className=\"flex w-full\"\r\n      onChange={(value) => setSliderValue(value)}\r\n      onChangeEnd={(value) => configurarConsulta()}\r\n    />\r\n  );\r\n}"],"names":[],"mappings":";;;;;;;;;;AAgBe,SAAS,WAAW,KAAY;IAC7C,MAAM,EACJ,MAAM,EACN,MAAM,EACN,IAAI,EACJ,KAAK,EACL,YAAY,EACZ,WAAW,EACX,gBAAgB,EAChB,IAAI,EACL,GAAG;IAEJ,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAqB;QAChE;QACA;KACD;IAED,SAAS;QACP,IAAI,cAAc;YAAE,GAAG,gBAAgB;QAAC;QAExC,IAAI,QAAQ,WAAW;YACrB,IAAI,MAAM,OAAO,CAAC,cAAc;gBAC9B,YAAY,OAAO,GAAG;YACxB,OAAO;gBACL,YAAY,OAAO,GAAG;oBAAC;oBAAa;iBAAY;YAClD;QACF,OAAO,IAAI,QAAQ,YAAY;YAC7B,IAAI,MAAM,OAAO,CAAC,cAAc;gBAC9B,YAAY,QAAQ,GAAG;YACzB,OAAO;gBACL,YAAY,QAAQ,GAAG;oBAAC;oBAAa;iBAAY;YACnD;QACF;QAEA,YAAY;IACd;IAEA,qBACE,wPAAC,mNAAA,CAAA,SAAM;QACL,OAAO;QACP,MAAM;QACN,UAAU;QACV,UAAU;QACV,cAAc;QACd,WAAW;QACX,WAAU;QACV,UAAU,CAAC,QAAU,eAAe;QACpC,aAAa,CAAC,QAAU;;;;;;AAG9B"}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Sidebar/opciones-area.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Deslizador from \"./slider\";\r\nimport { Consulta } from \"@/types/consulta\";\r\n\r\ntype Props = {\r\n  consultaOriginal: Consulta;\r\n  setConsulta: (consulta: Consulta) => void;\r\n};\r\n\r\nconst OpcionesArea = (props: Props) => {\r\n  const { setConsulta, consultaOriginal } = props;\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col gap-3\">\r\n      <p className=\"flex place-content-center\">Área de los datos</p>\r\n\r\n      <Deslizador\r\n        label=\"Rango de la latitud\"\r\n        maximo={-34}\r\n        minimo={-35}\r\n        step={0.25}\r\n        defaultValue={[-34.75, -34.25]}\r\n        setConsulta={setConsulta}\r\n        consultaOriginal={consultaOriginal}\r\n        tipo=\"latitud\"\r\n      />\r\n\r\n      <Deslizador\r\n        label=\"Rango de la longitud\"\r\n        maximo={110}\r\n        minimo={108}\r\n        step={0.25}\r\n        defaultValue={[108.25, 109]}\r\n        setConsulta={setConsulta}\r\n        consultaOriginal={consultaOriginal}\r\n        tipo=\"longitud\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpcionesArea;\r\n"],"names":[],"mappings":";;;;;;;;AASA,MAAM,eAAe,CAAC;IACpB,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,GAAG;IAE1C,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBAAE,WAAU;0BAA4B;;;;;;0BAEzC,wPAAC,gIAAA,CAAA,UAAU;gBACT,OAAM;gBACN,QAAQ,CAAC;gBACT,QAAQ,CAAC;gBACT,MAAM;gBACN,cAAc;oBAAC,CAAC;oBAAO,CAAC;iBAAM;gBAC9B,aAAa;gBACb,kBAAkB;gBAClB,MAAK;;;;;;0BAGP,wPAAC,gIAAA,CAAA,UAAU;gBACT,OAAM;gBACN,QAAQ;gBACR,QAAQ;gBACR,MAAM;gBACN,cAAc;oBAAC;oBAAQ;iBAAI;gBAC3B,aAAa;gBACb,kBAAkB;gBAClB,MAAK;;;;;;;;;;;;AAIb;uCAEe"}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Sidebar/time-input.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TimeInput } from \"@nextui-org/react\";\r\nimport { Consulta } from \"@/types/consulta\";\r\n\r\ntype Props = {\r\n  desabilitado: boolean;\r\n  setConsulta: (consulta: Consulta) => void;\r\n  consultaOriginal: Consulta;\r\n  esLimiteIni?: boolean;\r\n};\r\n\r\nexport default function SeleccionHora(props: Props) {\r\n  const { desabilitado, setConsulta, consultaOriginal, esLimiteIni } = props;\r\n\r\n  const configurarConsulta = (valor: number) => {\r\n    let tiempo = consultaOriginal.tiempo[0];\r\n\r\n    let result = String(valor);\r\n    if (result.length < 2) {\r\n      result = \"0\" + result;\r\n    }\r\n    result = tiempo.slice(0, 11) + result + \":00:00.000000000\";\r\n\r\n    let newConsulta = { ...consultaOriginal };\r\n    newConsulta.tiempo[0] = result;\r\n    setConsulta(newConsulta);\r\n  };\r\n\r\n  return (\r\n    <TimeInput\r\n      isDisabled={desabilitado}\r\n      label=\"Seleccione la hora\"\r\n      isRequired\r\n      granularity=\"hour\"\r\n      onChange={(value) => configurarConsulta(value.hour)}\r\n    />\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAWe,SAAS,cAAc,KAAY;IAChD,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,gBAAgB,EAAE,WAAW,EAAE,GAAG;IAErE,MAAM,qBAAqB,CAAC;QAC1B,IAAI,SAAS,iBAAiB,MAAM,CAAC,EAAE;QAEvC,IAAI,SAAS,OAAO;QACpB,IAAI,OAAO,MAAM,GAAG,GAAG;YACrB,SAAS,MAAM;QACjB;QACA,SAAS,OAAO,KAAK,CAAC,GAAG,MAAM,SAAS;QAExC,IAAI,cAAc;YAAE,GAAG,gBAAgB;QAAC;QACxC,YAAY,MAAM,CAAC,EAAE,GAAG;QACxB,YAAY;IACd;IAEA,qBACE,wPAAC,iOAAA,CAAA,YAAS;QACR,YAAY;QACZ,OAAM;QACN,UAAU;QACV,aAAY;QACZ,UAAU,CAAC,QAAU,mBAAmB,MAAM,IAAI;;;;;;AAGxD"}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 831, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Sidebar/opciones-tiempo.tsx"],"sourcesContent":["import { DateRangePicker } from \"@nextui-org/react\";\r\nimport React, { useState } from \"react\";\r\nimport SeleccionHora from \"./time-input\";\r\nimport Desplegable from \"@/components/Sidebar/select\";\r\nimport FechaRango from \"./fecha-rango\";\r\nimport { Consulta } from \"@/types/consulta\";\r\nimport SeleccionFecha from \"./seleccion-fecha\";\r\n\r\ntype Props = {\r\n  desabilitado: boolean;\r\n  setConsulta: (consulta: Consulta) => void;\r\n  consultaOriginal: Consulta;\r\n};\r\n\r\nconst OpcionesTiempo = (props: Props) => {\r\n  const { setConsulta, desabilitado, consultaOriginal } = props;\r\n\r\n  const [tipoGrafico, setTipoGrafico] = useState(\"\");\r\n\r\n  const handleSelect = (key: string) => {\r\n    setTipoGrafico(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-3 w-full\">\r\n      <p className=\"flex place-content-center\">Tipo de gráfico</p>\r\n\r\n      <Desplegable\r\n        elementos={[\r\n          { key: \"0\", label: \"Mapa de calor\" },\r\n          { key: \"1\", label: \"Serie de tiempo\" },\r\n        ]}\r\n        titulo=\"Gráfico\"\r\n        explicacion=\"Seleccione el tipo de gráfico\"\r\n        desabilitado={desabilitado}\r\n        onSelect={handleSelect}\r\n      />\r\n\r\n      {tipoGrafico == \"0\" ? (\r\n        <SeleccionFecha\r\n          setConsulta={setConsulta}\r\n          consultaOriginal={consultaOriginal}\r\n          desabilitado={desabilitado}\r\n        />\r\n      ) : null}\r\n\r\n      {tipoGrafico == \"0\" ? (\r\n        <SeleccionHora\r\n          setConsulta={setConsulta}\r\n          consultaOriginal={consultaOriginal}\r\n          desabilitado={desabilitado}\r\n        />\r\n      ) : null}\r\n\r\n      {tipoGrafico == \"1\" ? <FechaRango setConsulta={setConsulta} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpcionesTiempo;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAcA,MAAM,iBAAiB,CAAC;IACtB,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG;IAExD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,eAAe,CAAC;QACpB,eAAe;IACjB;IAEA,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBAAE,WAAU;0BAA4B;;;;;;0BAEzC,wPAAC,gIAAA,CAAA,UAAW;gBACV,WAAW;oBACT;wBAAE,KAAK;wBAAK,OAAO;oBAAgB;oBACnC;wBAAE,KAAK;wBAAK,OAAO;oBAAkB;iBACtC;gBACD,QAAO;gBACP,aAAY;gBACZ,cAAc;gBACd,UAAU;;;;;;YAGX,eAAe,oBACd,wPAAC,4IAAA,CAAA,UAAc;gBACb,aAAa;gBACb,kBAAkB;gBAClB,cAAc;;;;;uBAEd;YAEH,eAAe,oBACd,wPAAC,uIAAA,CAAA,UAAa;gBACZ,aAAa;gBACb,kBAAkB;gBAClB,cAAc;;;;;uBAEd;YAEH,eAAe,oBAAM,wPAAC,wIAAA,CAAA,UAAU;gBAAC,aAAa;;;;;uBAAkB;;;;;;;AAGvE;uCAEe"}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 922, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/Sidebar/boton.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@nextui-org/react\";\r\n\r\ntype Props = {\r\n  texto: string;\r\n  funcion: () => void;\r\n};\r\n\r\nexport default function Boton(props: Props) {\r\n  const { texto, funcion } = props;\r\n\r\n  return (\r\n    <Button\r\n      color=\"primary\"\r\n      fullWidth={false}\r\n      onClick={funcion}\r\n      className=\"flex flex-shrink-0\"\r\n    >\r\n      {texto}\r\n    </Button>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAQe,SAAS,MAAM,KAAY;IACxC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;IAE3B,qBACE,wPAAC,mNAAA,CAAA,SAAM;QACL,OAAM;QACN,WAAW;QACX,SAAS;QACT,WAAU;kBAET;;;;;;AAGP"}},
    {"offset": {"line": 944, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/config/variables.ts"],"sourcesContent":["export const variables = [{\r\n  key: \"u\", // \"v\" \r\n  label: \"Velocidad del viento\", // U/V\r\n},\r\n{\r\n  key: \"u10\", // \"v10\"\r\n  label: \"Velocidad del viento a 10 metros de la superficie\", // U/V wind component\r\n},\r\n{\r\n  key: \"t\",\r\n  label: \"Temperatura\",\r\n},\r\n{\r\n  key: \"t2m\",\r\n  label: \"Temperatura a 2 metro de la superficie\",\r\n},\r\n{\r\n  key: \"anor\",\r\n  label: \"Ángulo de la orografía a escala subcuadrícula\",\r\n},\r\n{\r\n  key: \"isor\",\r\n  label: \"Anisotropía de la orografía a escala subcuadrícula\",\r\n},\r\n{\r\n  key: \"z\",\r\n  label: \"Geopotencial\",\r\n},\r\n{\r\n  key: \"z_surface\",\r\n  label: \"Geopotencial en la superficie\",\r\n},\r\n{\r\n  key: \"cvh\", // \"cvl\"\r\n  label: \"Covertura de vegetación alta\", // tambien existe vegetación baja\r\n},\r\n{\r\n  key: \"tvh\", // \"tvl\"\r\n  label: \"Tipo de vegetación alta\", // tambien esta la baja\r\n},\r\n{\r\n  key: \"cl\",\r\n  label: \"Covertura de lagos\",\r\n},\r\n{\r\n  key: \"lsm\",\r\n  label: \"Segmentación entre tierra y mar\",\r\n},\r\n{\r\n  key: \"msl\",\r\n  label: \"Presión media a nivel del mar\",\r\n},\r\n{\r\n  key: \"siconc\",\r\n  label: \"Covertura de hielo en el mar\",\r\n},\r\n{\r\n  key: \"sst\",\r\n  label: \"Temperatura en la superfice del mar\",\r\n},\r\n{\r\n  key: \"slor\",\r\n  label: \"Pendiente de la orografía\",\r\n},\r\n{\r\n  key: \"slt\",\r\n  label: \"Tipo de suelo\",\r\n},\r\n{\r\n  key: \"q\",\r\n  label: \"Humedad específica\",\r\n},\r\n{\r\n  key: \"sdfor\",\r\n  label: \"Desviación estándar de la orografía filtrada\",\r\n},\r\n{\r\n  key: \"sdor\",\r\n  label: \"Desviación estándar de la orografía\",\r\n},\r\n{\r\n  key: \"sp\",\r\n  label: \"Presión en la superficie\",\r\n},\r\n{\r\n  key: \"tisr\",\r\n  label: \"Radiación solar incidente\",\r\n},\r\n{\r\n  key: \"tcc\",\r\n  label: \"Covertura total de nubes\",\r\n},\r\n{\r\n key: \"w\",\r\n label: \"Velocidad vertical en la atmósfera\",\r\n}\r\n]\r\n"],"names":[],"mappings":";;;AAAO,MAAM,YAAY;IAAC;QACxB,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACE,KAAK;QACL,OAAO;IACT;IACA;QACC,KAAK;QACL,OAAO;IACR;CACC"}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1054, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1054, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1059, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/visualizer/page.tsx"],"sourcesContent":["\"use client\";\r\nimport Visualizador from \"@/components/Graphic/general\";\r\nimport Sidebar from \"@/components/Sidebar/Sidebar\";\r\nimport BackendData from \"@/types/backend-data\";\r\nimport { exampleData } from \"@/config/test-data\";\r\nimport { useChartStore } from \"@/utils/Stores/chartStore\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function page() {\r\n  const { loadChartData } = useChartStore.getState();\r\n\r\n  useEffect(() => {\r\n    loadChartData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-row h-full w-full justify-center self-center -mt-10\">\r\n      <Sidebar />\r\n      <Visualizador />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAQe,SAAS;IACtB,MAAM,EAAE,aAAa,EAAE,GAAG,6HAAA,CAAA,gBAAa,CAAC,QAAQ;IAEhD,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC,iIAAA,CAAA,UAAO;;;;;0BACR,wPAAC,iIAAA,CAAA,UAAY;;;;;;;;;;;AAGnB"}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}